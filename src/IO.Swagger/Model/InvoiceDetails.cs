/* 
 * Bind ERP API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// InvoiceDetails
    /// </summary>
    [DataContract]
    public partial class InvoiceDetails :  IEquatable<InvoiceDetails>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InvoiceDetails" /> class.
        /// </summary>
        /// <param name="ID">ID.</param>
        /// <param name="UUID">UUID.</param>
        /// <param name="Series">Series.</param>
        /// <param name="Number">Number.</param>
        /// <param name="ClientID">ClientID.</param>
        /// <param name="ClientName">ClientName.</param>
        /// <param name="PaymentTerms">PaymentTerms.</param>
        /// <param name="Status">Status.</param>
        /// <param name="StatusCode">StatusCode.</param>
        /// <param name="ClientPhoneNumber">ClientPhoneNumber.</param>
        /// <param name="ClientContact">ClientContact.</param>
        /// <param name="RFC">RFC.</param>
        /// <param name="CreatedByID">CreatedByID.</param>
        /// <param name="CreatedByName">CreatedByName.</param>
        /// <param name="CreationDate">CreationDate.</param>
        /// <param name="ApplicationDate">ApplicationDate.</param>
        /// <param name="PriceListID">PriceListID.</param>
        /// <param name="PriceListName">PriceListName.</param>
        /// <param name="LocationID">LocationID.</param>
        /// <param name="LocationName">LocationName.</param>
        /// <param name="WarehouseID">WarehouseID.</param>
        /// <param name="WarehouseName">WarehouseName.</param>
        /// <param name="CFDIPaymentMethod">CFDIPaymentMethod.</param>
        /// <param name="CFDIPaymentTerm">CFDIPaymentTerm.</param>
        /// <param name="CFDIAccountNumber">CFDIAccountNumber.</param>
        /// <param name="CurrencyName">CurrencyName.</param>
        /// <param name="ExchangeRate">ExchangeRate.</param>
        /// <param name="PurchaseOrder">PurchaseOrder.</param>
        /// <param name="FiscalID">FiscalID.</param>
        /// <param name="Address">Address.</param>
        /// <param name="Comments">Comments.</param>
        /// <param name="Subtotal">Subtotal.</param>
        /// <param name="Discount">Discount.</param>
        /// <param name="VAT">VAT.</param>
        /// <param name="IEPS">IEPS.</param>
        /// <param name="VATRet">VATRet.</param>
        /// <param name="ISRRet">ISRRet.</param>
        /// <param name="Payments">Payments.</param>
        /// <param name="CreditNotes">CreditNotes.</param>
        /// <param name="Products">Products.</param>
        /// <param name="Services">Services.</param>
        public InvoiceDetails(Guid? ID = default(Guid?), Guid? UUID = default(Guid?), string Series = default(string), long? Number = default(long?), Guid? ClientID = default(Guid?), string ClientName = default(string), int? PaymentTerms = default(int?), string Status = default(string), int? StatusCode = default(int?), string ClientPhoneNumber = default(string), string ClientContact = default(string), string RFC = default(string), Guid? CreatedByID = default(Guid?), string CreatedByName = default(string), DateTime? CreationDate = default(DateTime?), DateTime? ApplicationDate = default(DateTime?), Guid? PriceListID = default(Guid?), string PriceListName = default(string), Guid? LocationID = default(Guid?), string LocationName = default(string), Guid? WarehouseID = default(Guid?), string WarehouseName = default(string), string CFDIPaymentMethod = default(string), string CFDIPaymentTerm = default(string), string CFDIAccountNumber = default(string), string CurrencyName = default(string), double? ExchangeRate = default(double?), string PurchaseOrder = default(string), Guid? FiscalID = default(Guid?), string Address = default(string), string Comments = default(string), double? Subtotal = default(double?), double? Discount = default(double?), double? VAT = default(double?), double? IEPS = default(double?), double? VATRet = default(double?), double? ISRRet = default(double?), double? Payments = default(double?), double? CreditNotes = default(double?), List<InvoiceDetailsProduct> Products = default(List<InvoiceDetailsProduct>), List<InvoiceDetailsService> Services = default(List<InvoiceDetailsService>))
        {
            this.ID = ID;
            this.UUID = UUID;
            this.Series = Series;
            this.Number = Number;
            this.ClientID = ClientID;
            this.ClientName = ClientName;
            this.PaymentTerms = PaymentTerms;
            this.Status = Status;
            this.StatusCode = StatusCode;
            this.ClientPhoneNumber = ClientPhoneNumber;
            this.ClientContact = ClientContact;
            this.RFC = RFC;
            this.CreatedByID = CreatedByID;
            this.CreatedByName = CreatedByName;
            this.CreationDate = CreationDate;
            this.ApplicationDate = ApplicationDate;
            this.PriceListID = PriceListID;
            this.PriceListName = PriceListName;
            this.LocationID = LocationID;
            this.LocationName = LocationName;
            this.WarehouseID = WarehouseID;
            this.WarehouseName = WarehouseName;
            this.CFDIPaymentMethod = CFDIPaymentMethod;
            this.CFDIPaymentTerm = CFDIPaymentTerm;
            this.CFDIAccountNumber = CFDIAccountNumber;
            this.CurrencyName = CurrencyName;
            this.ExchangeRate = ExchangeRate;
            this.PurchaseOrder = PurchaseOrder;
            this.FiscalID = FiscalID;
            this.Address = Address;
            this.Comments = Comments;
            this.Subtotal = Subtotal;
            this.Discount = Discount;
            this.VAT = VAT;
            this.IEPS = IEPS;
            this.VATRet = VATRet;
            this.ISRRet = ISRRet;
            this.Payments = Payments;
            this.CreditNotes = CreditNotes;
            this.Products = Products;
            this.Services = Services;
        }
        
        /// <summary>
        /// Gets or Sets ID
        /// </summary>
        [DataMember(Name="ID", EmitDefaultValue=false)]
        public Guid? ID { get; set; }

        /// <summary>
        /// Gets or Sets UUID
        /// </summary>
        [DataMember(Name="UUID", EmitDefaultValue=false)]
        public Guid? UUID { get; set; }

        /// <summary>
        /// Gets or Sets Series
        /// </summary>
        [DataMember(Name="Series", EmitDefaultValue=false)]
        public string Series { get; set; }

        /// <summary>
        /// Gets or Sets Number
        /// </summary>
        [DataMember(Name="Number", EmitDefaultValue=false)]
        public long? Number { get; set; }

        /// <summary>
        /// Gets or Sets ClientID
        /// </summary>
        [DataMember(Name="ClientID", EmitDefaultValue=false)]
        public Guid? ClientID { get; set; }

        /// <summary>
        /// Gets or Sets ClientName
        /// </summary>
        [DataMember(Name="ClientName", EmitDefaultValue=false)]
        public string ClientName { get; set; }

        /// <summary>
        /// Gets or Sets PaymentTerms
        /// </summary>
        [DataMember(Name="PaymentTerms", EmitDefaultValue=false)]
        public int? PaymentTerms { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="Status", EmitDefaultValue=false)]
        public string Status { get; set; }

        /// <summary>
        /// Gets or Sets StatusCode
        /// </summary>
        [DataMember(Name="StatusCode", EmitDefaultValue=false)]
        public int? StatusCode { get; set; }

        /// <summary>
        /// Gets or Sets ClientPhoneNumber
        /// </summary>
        [DataMember(Name="ClientPhoneNumber", EmitDefaultValue=false)]
        public string ClientPhoneNumber { get; set; }

        /// <summary>
        /// Gets or Sets ClientContact
        /// </summary>
        [DataMember(Name="ClientContact", EmitDefaultValue=false)]
        public string ClientContact { get; set; }

        /// <summary>
        /// Gets or Sets RFC
        /// </summary>
        [DataMember(Name="RFC", EmitDefaultValue=false)]
        public string RFC { get; set; }

        /// <summary>
        /// Gets or Sets CreatedByID
        /// </summary>
        [DataMember(Name="CreatedByID", EmitDefaultValue=false)]
        public Guid? CreatedByID { get; set; }

        /// <summary>
        /// Gets or Sets CreatedByName
        /// </summary>
        [DataMember(Name="CreatedByName", EmitDefaultValue=false)]
        public string CreatedByName { get; set; }

        /// <summary>
        /// Gets or Sets CreationDate
        /// </summary>
        [DataMember(Name="CreationDate", EmitDefaultValue=false)]
        public DateTime? CreationDate { get; set; }

        /// <summary>
        /// Gets or Sets ApplicationDate
        /// </summary>
        [DataMember(Name="ApplicationDate", EmitDefaultValue=false)]
        public DateTime? ApplicationDate { get; set; }

        /// <summary>
        /// Gets or Sets PriceListID
        /// </summary>
        [DataMember(Name="PriceListID", EmitDefaultValue=false)]
        public Guid? PriceListID { get; set; }

        /// <summary>
        /// Gets or Sets PriceListName
        /// </summary>
        [DataMember(Name="PriceListName", EmitDefaultValue=false)]
        public string PriceListName { get; set; }

        /// <summary>
        /// Gets or Sets LocationID
        /// </summary>
        [DataMember(Name="LocationID", EmitDefaultValue=false)]
        public Guid? LocationID { get; set; }

        /// <summary>
        /// Gets or Sets LocationName
        /// </summary>
        [DataMember(Name="LocationName", EmitDefaultValue=false)]
        public string LocationName { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseID
        /// </summary>
        [DataMember(Name="WarehouseID", EmitDefaultValue=false)]
        public Guid? WarehouseID { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseName
        /// </summary>
        [DataMember(Name="WarehouseName", EmitDefaultValue=false)]
        public string WarehouseName { get; set; }

        /// <summary>
        /// Gets or Sets CFDIPaymentMethod
        /// </summary>
        [DataMember(Name="CFDIPaymentMethod", EmitDefaultValue=false)]
        public string CFDIPaymentMethod { get; set; }

        /// <summary>
        /// Gets or Sets CFDIPaymentTerm
        /// </summary>
        [DataMember(Name="CFDIPaymentTerm", EmitDefaultValue=false)]
        public string CFDIPaymentTerm { get; set; }

        /// <summary>
        /// Gets or Sets CFDIAccountNumber
        /// </summary>
        [DataMember(Name="CFDIAccountNumber", EmitDefaultValue=false)]
        public string CFDIAccountNumber { get; set; }

        /// <summary>
        /// Gets or Sets CurrencyName
        /// </summary>
        [DataMember(Name="CurrencyName", EmitDefaultValue=false)]
        public string CurrencyName { get; set; }

        /// <summary>
        /// Gets or Sets ExchangeRate
        /// </summary>
        [DataMember(Name="ExchangeRate", EmitDefaultValue=false)]
        public double? ExchangeRate { get; set; }

        /// <summary>
        /// Gets or Sets PurchaseOrder
        /// </summary>
        [DataMember(Name="PurchaseOrder", EmitDefaultValue=false)]
        public string PurchaseOrder { get; set; }

        /// <summary>
        /// Gets or Sets FiscalID
        /// </summary>
        [DataMember(Name="FiscalID", EmitDefaultValue=false)]
        public Guid? FiscalID { get; set; }

        /// <summary>
        /// Gets or Sets Address
        /// </summary>
        [DataMember(Name="Address", EmitDefaultValue=false)]
        public string Address { get; set; }

        /// <summary>
        /// Gets or Sets Comments
        /// </summary>
        [DataMember(Name="Comments", EmitDefaultValue=false)]
        public string Comments { get; set; }

        /// <summary>
        /// Gets or Sets Subtotal
        /// </summary>
        [DataMember(Name="Subtotal", EmitDefaultValue=false)]
        public double? Subtotal { get; set; }

        /// <summary>
        /// Gets or Sets Discount
        /// </summary>
        [DataMember(Name="Discount", EmitDefaultValue=false)]
        public double? Discount { get; set; }

        /// <summary>
        /// Gets or Sets VAT
        /// </summary>
        [DataMember(Name="VAT", EmitDefaultValue=false)]
        public double? VAT { get; set; }

        /// <summary>
        /// Gets or Sets IEPS
        /// </summary>
        [DataMember(Name="IEPS", EmitDefaultValue=false)]
        public double? IEPS { get; set; }

        /// <summary>
        /// Gets or Sets VATRet
        /// </summary>
        [DataMember(Name="VATRet", EmitDefaultValue=false)]
        public double? VATRet { get; set; }

        /// <summary>
        /// Gets or Sets ISRRet
        /// </summary>
        [DataMember(Name="ISRRet", EmitDefaultValue=false)]
        public double? ISRRet { get; set; }

        /// <summary>
        /// Gets or Sets Payments
        /// </summary>
        [DataMember(Name="Payments", EmitDefaultValue=false)]
        public double? Payments { get; set; }

        /// <summary>
        /// Gets or Sets CreditNotes
        /// </summary>
        [DataMember(Name="CreditNotes", EmitDefaultValue=false)]
        public double? CreditNotes { get; set; }

        /// <summary>
        /// Gets or Sets Products
        /// </summary>
        [DataMember(Name="Products", EmitDefaultValue=false)]
        public List<InvoiceDetailsProduct> Products { get; set; }

        /// <summary>
        /// Gets or Sets Services
        /// </summary>
        [DataMember(Name="Services", EmitDefaultValue=false)]
        public List<InvoiceDetailsService> Services { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InvoiceDetails {\n");
            sb.Append("  ID: ").Append(ID).Append("\n");
            sb.Append("  UUID: ").Append(UUID).Append("\n");
            sb.Append("  Series: ").Append(Series).Append("\n");
            sb.Append("  Number: ").Append(Number).Append("\n");
            sb.Append("  ClientID: ").Append(ClientID).Append("\n");
            sb.Append("  ClientName: ").Append(ClientName).Append("\n");
            sb.Append("  PaymentTerms: ").Append(PaymentTerms).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  StatusCode: ").Append(StatusCode).Append("\n");
            sb.Append("  ClientPhoneNumber: ").Append(ClientPhoneNumber).Append("\n");
            sb.Append("  ClientContact: ").Append(ClientContact).Append("\n");
            sb.Append("  RFC: ").Append(RFC).Append("\n");
            sb.Append("  CreatedByID: ").Append(CreatedByID).Append("\n");
            sb.Append("  CreatedByName: ").Append(CreatedByName).Append("\n");
            sb.Append("  CreationDate: ").Append(CreationDate).Append("\n");
            sb.Append("  ApplicationDate: ").Append(ApplicationDate).Append("\n");
            sb.Append("  PriceListID: ").Append(PriceListID).Append("\n");
            sb.Append("  PriceListName: ").Append(PriceListName).Append("\n");
            sb.Append("  LocationID: ").Append(LocationID).Append("\n");
            sb.Append("  LocationName: ").Append(LocationName).Append("\n");
            sb.Append("  WarehouseID: ").Append(WarehouseID).Append("\n");
            sb.Append("  WarehouseName: ").Append(WarehouseName).Append("\n");
            sb.Append("  CFDIPaymentMethod: ").Append(CFDIPaymentMethod).Append("\n");
            sb.Append("  CFDIPaymentTerm: ").Append(CFDIPaymentTerm).Append("\n");
            sb.Append("  CFDIAccountNumber: ").Append(CFDIAccountNumber).Append("\n");
            sb.Append("  CurrencyName: ").Append(CurrencyName).Append("\n");
            sb.Append("  ExchangeRate: ").Append(ExchangeRate).Append("\n");
            sb.Append("  PurchaseOrder: ").Append(PurchaseOrder).Append("\n");
            sb.Append("  FiscalID: ").Append(FiscalID).Append("\n");
            sb.Append("  Address: ").Append(Address).Append("\n");
            sb.Append("  Comments: ").Append(Comments).Append("\n");
            sb.Append("  Subtotal: ").Append(Subtotal).Append("\n");
            sb.Append("  Discount: ").Append(Discount).Append("\n");
            sb.Append("  VAT: ").Append(VAT).Append("\n");
            sb.Append("  IEPS: ").Append(IEPS).Append("\n");
            sb.Append("  VATRet: ").Append(VATRet).Append("\n");
            sb.Append("  ISRRet: ").Append(ISRRet).Append("\n");
            sb.Append("  Payments: ").Append(Payments).Append("\n");
            sb.Append("  CreditNotes: ").Append(CreditNotes).Append("\n");
            sb.Append("  Products: ").Append(Products).Append("\n");
            sb.Append("  Services: ").Append(Services).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InvoiceDetails);
        }

        /// <summary>
        /// Returns true if InvoiceDetails instances are equal
        /// </summary>
        /// <param name="input">Instance of InvoiceDetails to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InvoiceDetails input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ID == input.ID ||
                    (this.ID != null &&
                    this.ID.Equals(input.ID))
                ) && 
                (
                    this.UUID == input.UUID ||
                    (this.UUID != null &&
                    this.UUID.Equals(input.UUID))
                ) && 
                (
                    this.Series == input.Series ||
                    (this.Series != null &&
                    this.Series.Equals(input.Series))
                ) && 
                (
                    this.Number == input.Number ||
                    (this.Number != null &&
                    this.Number.Equals(input.Number))
                ) && 
                (
                    this.ClientID == input.ClientID ||
                    (this.ClientID != null &&
                    this.ClientID.Equals(input.ClientID))
                ) && 
                (
                    this.ClientName == input.ClientName ||
                    (this.ClientName != null &&
                    this.ClientName.Equals(input.ClientName))
                ) && 
                (
                    this.PaymentTerms == input.PaymentTerms ||
                    (this.PaymentTerms != null &&
                    this.PaymentTerms.Equals(input.PaymentTerms))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) && 
                (
                    this.StatusCode == input.StatusCode ||
                    (this.StatusCode != null &&
                    this.StatusCode.Equals(input.StatusCode))
                ) && 
                (
                    this.ClientPhoneNumber == input.ClientPhoneNumber ||
                    (this.ClientPhoneNumber != null &&
                    this.ClientPhoneNumber.Equals(input.ClientPhoneNumber))
                ) && 
                (
                    this.ClientContact == input.ClientContact ||
                    (this.ClientContact != null &&
                    this.ClientContact.Equals(input.ClientContact))
                ) && 
                (
                    this.RFC == input.RFC ||
                    (this.RFC != null &&
                    this.RFC.Equals(input.RFC))
                ) && 
                (
                    this.CreatedByID == input.CreatedByID ||
                    (this.CreatedByID != null &&
                    this.CreatedByID.Equals(input.CreatedByID))
                ) && 
                (
                    this.CreatedByName == input.CreatedByName ||
                    (this.CreatedByName != null &&
                    this.CreatedByName.Equals(input.CreatedByName))
                ) && 
                (
                    this.CreationDate == input.CreationDate ||
                    (this.CreationDate != null &&
                    this.CreationDate.Equals(input.CreationDate))
                ) && 
                (
                    this.ApplicationDate == input.ApplicationDate ||
                    (this.ApplicationDate != null &&
                    this.ApplicationDate.Equals(input.ApplicationDate))
                ) && 
                (
                    this.PriceListID == input.PriceListID ||
                    (this.PriceListID != null &&
                    this.PriceListID.Equals(input.PriceListID))
                ) && 
                (
                    this.PriceListName == input.PriceListName ||
                    (this.PriceListName != null &&
                    this.PriceListName.Equals(input.PriceListName))
                ) && 
                (
                    this.LocationID == input.LocationID ||
                    (this.LocationID != null &&
                    this.LocationID.Equals(input.LocationID))
                ) && 
                (
                    this.LocationName == input.LocationName ||
                    (this.LocationName != null &&
                    this.LocationName.Equals(input.LocationName))
                ) && 
                (
                    this.WarehouseID == input.WarehouseID ||
                    (this.WarehouseID != null &&
                    this.WarehouseID.Equals(input.WarehouseID))
                ) && 
                (
                    this.WarehouseName == input.WarehouseName ||
                    (this.WarehouseName != null &&
                    this.WarehouseName.Equals(input.WarehouseName))
                ) && 
                (
                    this.CFDIPaymentMethod == input.CFDIPaymentMethod ||
                    (this.CFDIPaymentMethod != null &&
                    this.CFDIPaymentMethod.Equals(input.CFDIPaymentMethod))
                ) && 
                (
                    this.CFDIPaymentTerm == input.CFDIPaymentTerm ||
                    (this.CFDIPaymentTerm != null &&
                    this.CFDIPaymentTerm.Equals(input.CFDIPaymentTerm))
                ) && 
                (
                    this.CFDIAccountNumber == input.CFDIAccountNumber ||
                    (this.CFDIAccountNumber != null &&
                    this.CFDIAccountNumber.Equals(input.CFDIAccountNumber))
                ) && 
                (
                    this.CurrencyName == input.CurrencyName ||
                    (this.CurrencyName != null &&
                    this.CurrencyName.Equals(input.CurrencyName))
                ) && 
                (
                    this.ExchangeRate == input.ExchangeRate ||
                    (this.ExchangeRate != null &&
                    this.ExchangeRate.Equals(input.ExchangeRate))
                ) && 
                (
                    this.PurchaseOrder == input.PurchaseOrder ||
                    (this.PurchaseOrder != null &&
                    this.PurchaseOrder.Equals(input.PurchaseOrder))
                ) && 
                (
                    this.FiscalID == input.FiscalID ||
                    (this.FiscalID != null &&
                    this.FiscalID.Equals(input.FiscalID))
                ) && 
                (
                    this.Address == input.Address ||
                    (this.Address != null &&
                    this.Address.Equals(input.Address))
                ) && 
                (
                    this.Comments == input.Comments ||
                    (this.Comments != null &&
                    this.Comments.Equals(input.Comments))
                ) && 
                (
                    this.Subtotal == input.Subtotal ||
                    (this.Subtotal != null &&
                    this.Subtotal.Equals(input.Subtotal))
                ) && 
                (
                    this.Discount == input.Discount ||
                    (this.Discount != null &&
                    this.Discount.Equals(input.Discount))
                ) && 
                (
                    this.VAT == input.VAT ||
                    (this.VAT != null &&
                    this.VAT.Equals(input.VAT))
                ) && 
                (
                    this.IEPS == input.IEPS ||
                    (this.IEPS != null &&
                    this.IEPS.Equals(input.IEPS))
                ) && 
                (
                    this.VATRet == input.VATRet ||
                    (this.VATRet != null &&
                    this.VATRet.Equals(input.VATRet))
                ) && 
                (
                    this.ISRRet == input.ISRRet ||
                    (this.ISRRet != null &&
                    this.ISRRet.Equals(input.ISRRet))
                ) && 
                (
                    this.Payments == input.Payments ||
                    (this.Payments != null &&
                    this.Payments.Equals(input.Payments))
                ) && 
                (
                    this.CreditNotes == input.CreditNotes ||
                    (this.CreditNotes != null &&
                    this.CreditNotes.Equals(input.CreditNotes))
                ) && 
                (
                    this.Products == input.Products ||
                    this.Products != null &&
                    this.Products.SequenceEqual(input.Products)
                ) && 
                (
                    this.Services == input.Services ||
                    this.Services != null &&
                    this.Services.SequenceEqual(input.Services)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ID != null)
                    hashCode = hashCode * 59 + this.ID.GetHashCode();
                if (this.UUID != null)
                    hashCode = hashCode * 59 + this.UUID.GetHashCode();
                if (this.Series != null)
                    hashCode = hashCode * 59 + this.Series.GetHashCode();
                if (this.Number != null)
                    hashCode = hashCode * 59 + this.Number.GetHashCode();
                if (this.ClientID != null)
                    hashCode = hashCode * 59 + this.ClientID.GetHashCode();
                if (this.ClientName != null)
                    hashCode = hashCode * 59 + this.ClientName.GetHashCode();
                if (this.PaymentTerms != null)
                    hashCode = hashCode * 59 + this.PaymentTerms.GetHashCode();
                if (this.Status != null)
                    hashCode = hashCode * 59 + this.Status.GetHashCode();
                if (this.StatusCode != null)
                    hashCode = hashCode * 59 + this.StatusCode.GetHashCode();
                if (this.ClientPhoneNumber != null)
                    hashCode = hashCode * 59 + this.ClientPhoneNumber.GetHashCode();
                if (this.ClientContact != null)
                    hashCode = hashCode * 59 + this.ClientContact.GetHashCode();
                if (this.RFC != null)
                    hashCode = hashCode * 59 + this.RFC.GetHashCode();
                if (this.CreatedByID != null)
                    hashCode = hashCode * 59 + this.CreatedByID.GetHashCode();
                if (this.CreatedByName != null)
                    hashCode = hashCode * 59 + this.CreatedByName.GetHashCode();
                if (this.CreationDate != null)
                    hashCode = hashCode * 59 + this.CreationDate.GetHashCode();
                if (this.ApplicationDate != null)
                    hashCode = hashCode * 59 + this.ApplicationDate.GetHashCode();
                if (this.PriceListID != null)
                    hashCode = hashCode * 59 + this.PriceListID.GetHashCode();
                if (this.PriceListName != null)
                    hashCode = hashCode * 59 + this.PriceListName.GetHashCode();
                if (this.LocationID != null)
                    hashCode = hashCode * 59 + this.LocationID.GetHashCode();
                if (this.LocationName != null)
                    hashCode = hashCode * 59 + this.LocationName.GetHashCode();
                if (this.WarehouseID != null)
                    hashCode = hashCode * 59 + this.WarehouseID.GetHashCode();
                if (this.WarehouseName != null)
                    hashCode = hashCode * 59 + this.WarehouseName.GetHashCode();
                if (this.CFDIPaymentMethod != null)
                    hashCode = hashCode * 59 + this.CFDIPaymentMethod.GetHashCode();
                if (this.CFDIPaymentTerm != null)
                    hashCode = hashCode * 59 + this.CFDIPaymentTerm.GetHashCode();
                if (this.CFDIAccountNumber != null)
                    hashCode = hashCode * 59 + this.CFDIAccountNumber.GetHashCode();
                if (this.CurrencyName != null)
                    hashCode = hashCode * 59 + this.CurrencyName.GetHashCode();
                if (this.ExchangeRate != null)
                    hashCode = hashCode * 59 + this.ExchangeRate.GetHashCode();
                if (this.PurchaseOrder != null)
                    hashCode = hashCode * 59 + this.PurchaseOrder.GetHashCode();
                if (this.FiscalID != null)
                    hashCode = hashCode * 59 + this.FiscalID.GetHashCode();
                if (this.Address != null)
                    hashCode = hashCode * 59 + this.Address.GetHashCode();
                if (this.Comments != null)
                    hashCode = hashCode * 59 + this.Comments.GetHashCode();
                if (this.Subtotal != null)
                    hashCode = hashCode * 59 + this.Subtotal.GetHashCode();
                if (this.Discount != null)
                    hashCode = hashCode * 59 + this.Discount.GetHashCode();
                if (this.VAT != null)
                    hashCode = hashCode * 59 + this.VAT.GetHashCode();
                if (this.IEPS != null)
                    hashCode = hashCode * 59 + this.IEPS.GetHashCode();
                if (this.VATRet != null)
                    hashCode = hashCode * 59 + this.VATRet.GetHashCode();
                if (this.ISRRet != null)
                    hashCode = hashCode * 59 + this.ISRRet.GetHashCode();
                if (this.Payments != null)
                    hashCode = hashCode * 59 + this.Payments.GetHashCode();
                if (this.CreditNotes != null)
                    hashCode = hashCode * 59 + this.CreditNotes.GetHashCode();
                if (this.Products != null)
                    hashCode = hashCode * 59 + this.Products.GetHashCode();
                if (this.Services != null)
                    hashCode = hashCode * 59 + this.Services.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
