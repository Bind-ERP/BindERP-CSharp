/* 
 * Bind ERP API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// OrderDetails
    /// </summary>
    [DataContract]
    public partial class OrderDetails :  IEquatable<OrderDetails>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderDetails" /> class.
        /// </summary>
        /// <param name="ID">ID.</param>
        /// <param name="ClientID">ClientID.</param>
        /// <param name="ClientName">ClientName.</param>
        /// <param name="PriceListName">PriceListName.</param>
        /// <param name="PriceListID">PriceListID.</param>
        /// <param name="LocationName">LocationName.</param>
        /// <param name="LocationID">LocationID.</param>
        /// <param name="WarehouseID">WarehouseID.</param>
        /// <param name="WarehouseName">WarehouseName.</param>
        /// <param name="OrderDate">OrderDate.</param>
        /// <param name="Comments">Comments.</param>
        /// <param name="Number">Number.</param>
        /// <param name="Address">Address.</param>
        /// <param name="ClientContact">ClientContact.</param>
        /// <param name="PhoneNumber">PhoneNumber.</param>
        /// <param name="EmployeeName">EmployeeName.</param>
        /// <param name="EmployeeID">EmployeeID.</param>
        /// <param name="StatusCode">StatusCode.</param>
        /// <param name="PurchaseOrder">PurchaseOrder.</param>
        /// <param name="Status">Status.</param>
        /// <param name="CurrencyName">CurrencyName.</param>
        /// <param name="CurrencyID">CurrencyID.</param>
        /// <param name="ExchangeRate">ExchangeRate.</param>
        /// <param name="RFC">RFC.</param>
        /// <param name="ServiceSubtotal">ServiceSubtotal.</param>
        /// <param name="ProductSubtotal">ProductSubtotal.</param>
        /// <param name="Discount">Discount.</param>
        /// <param name="VATRate">VATRate.</param>
        /// <param name="VAT">VAT.</param>
        /// <param name="DiscountType">DiscountType.</param>
        /// <param name="IEPS">IEPS.</param>
        /// <param name="IEPSRATE">IEPSRATE.</param>
        /// <param name="ISRRet">ISRRet.</param>
        /// <param name="ISRRetRate">ISRRetRate.</param>
        /// <param name="VatRet">VatRet.</param>
        /// <param name="VatRetRate">VatRetRate.</param>
        /// <param name="Total">Total.</param>
        /// <param name="Products">Products.</param>
        /// <param name="Services">Services.</param>
        public OrderDetails(Guid? ID = default(Guid?), Guid? ClientID = default(Guid?), string ClientName = default(string), string PriceListName = default(string), Guid? PriceListID = default(Guid?), string LocationName = default(string), Guid? LocationID = default(Guid?), Guid? WarehouseID = default(Guid?), string WarehouseName = default(string), DateTime? OrderDate = default(DateTime?), string Comments = default(string), long? Number = default(long?), string Address = default(string), string ClientContact = default(string), string PhoneNumber = default(string), string EmployeeName = default(string), Guid? EmployeeID = default(Guid?), int? StatusCode = default(int?), string PurchaseOrder = default(string), string Status = default(string), string CurrencyName = default(string), Guid? CurrencyID = default(Guid?), double? ExchangeRate = default(double?), string RFC = default(string), double? ServiceSubtotal = default(double?), double? ProductSubtotal = default(double?), double? Discount = default(double?), double? VATRate = default(double?), double? VAT = default(double?), int? DiscountType = default(int?), double? IEPS = default(double?), double? IEPSRATE = default(double?), double? ISRRet = default(double?), double? ISRRetRate = default(double?), double? VatRet = default(double?), double? VatRetRate = default(double?), double? Total = default(double?), List<OrderDetailsProduct> Products = default(List<OrderDetailsProduct>), List<OrderDetailsService> Services = default(List<OrderDetailsService>))
        {
            this.ID = ID;
            this.ClientID = ClientID;
            this.ClientName = ClientName;
            this.PriceListName = PriceListName;
            this.PriceListID = PriceListID;
            this.LocationName = LocationName;
            this.LocationID = LocationID;
            this.WarehouseID = WarehouseID;
            this.WarehouseName = WarehouseName;
            this.OrderDate = OrderDate;
            this.Comments = Comments;
            this.Number = Number;
            this.Address = Address;
            this.ClientContact = ClientContact;
            this.PhoneNumber = PhoneNumber;
            this.EmployeeName = EmployeeName;
            this.EmployeeID = EmployeeID;
            this.StatusCode = StatusCode;
            this.PurchaseOrder = PurchaseOrder;
            this.Status = Status;
            this.CurrencyName = CurrencyName;
            this.CurrencyID = CurrencyID;
            this.ExchangeRate = ExchangeRate;
            this.RFC = RFC;
            this.ServiceSubtotal = ServiceSubtotal;
            this.ProductSubtotal = ProductSubtotal;
            this.Discount = Discount;
            this.VATRate = VATRate;
            this.VAT = VAT;
            this.DiscountType = DiscountType;
            this.IEPS = IEPS;
            this.IEPSRATE = IEPSRATE;
            this.ISRRet = ISRRet;
            this.ISRRetRate = ISRRetRate;
            this.VatRet = VatRet;
            this.VatRetRate = VatRetRate;
            this.Total = Total;
            this.Products = Products;
            this.Services = Services;
        }
        
        /// <summary>
        /// Gets or Sets ID
        /// </summary>
        [DataMember(Name="ID", EmitDefaultValue=false)]
        public Guid? ID { get; set; }

        /// <summary>
        /// Gets or Sets ClientID
        /// </summary>
        [DataMember(Name="ClientID", EmitDefaultValue=false)]
        public Guid? ClientID { get; set; }

        /// <summary>
        /// Gets or Sets ClientName
        /// </summary>
        [DataMember(Name="ClientName", EmitDefaultValue=false)]
        public string ClientName { get; set; }

        /// <summary>
        /// Gets or Sets PriceListName
        /// </summary>
        [DataMember(Name="PriceListName", EmitDefaultValue=false)]
        public string PriceListName { get; set; }

        /// <summary>
        /// Gets or Sets PriceListID
        /// </summary>
        [DataMember(Name="PriceListID", EmitDefaultValue=false)]
        public Guid? PriceListID { get; set; }

        /// <summary>
        /// Gets or Sets LocationName
        /// </summary>
        [DataMember(Name="LocationName", EmitDefaultValue=false)]
        public string LocationName { get; set; }

        /// <summary>
        /// Gets or Sets LocationID
        /// </summary>
        [DataMember(Name="LocationID", EmitDefaultValue=false)]
        public Guid? LocationID { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseID
        /// </summary>
        [DataMember(Name="WarehouseID", EmitDefaultValue=false)]
        public Guid? WarehouseID { get; set; }

        /// <summary>
        /// Gets or Sets WarehouseName
        /// </summary>
        [DataMember(Name="WarehouseName", EmitDefaultValue=false)]
        public string WarehouseName { get; set; }

        /// <summary>
        /// Gets or Sets OrderDate
        /// </summary>
        [DataMember(Name="OrderDate", EmitDefaultValue=false)]
        public DateTime? OrderDate { get; set; }

        /// <summary>
        /// Gets or Sets Comments
        /// </summary>
        [DataMember(Name="Comments", EmitDefaultValue=false)]
        public string Comments { get; set; }

        /// <summary>
        /// Gets or Sets Number
        /// </summary>
        [DataMember(Name="Number", EmitDefaultValue=false)]
        public long? Number { get; set; }

        /// <summary>
        /// Gets or Sets Address
        /// </summary>
        [DataMember(Name="Address", EmitDefaultValue=false)]
        public string Address { get; set; }

        /// <summary>
        /// Gets or Sets ClientContact
        /// </summary>
        [DataMember(Name="ClientContact", EmitDefaultValue=false)]
        public string ClientContact { get; set; }

        /// <summary>
        /// Gets or Sets PhoneNumber
        /// </summary>
        [DataMember(Name="PhoneNumber", EmitDefaultValue=false)]
        public string PhoneNumber { get; set; }

        /// <summary>
        /// Gets or Sets EmployeeName
        /// </summary>
        [DataMember(Name="EmployeeName", EmitDefaultValue=false)]
        public string EmployeeName { get; set; }

        /// <summary>
        /// Gets or Sets EmployeeID
        /// </summary>
        [DataMember(Name="EmployeeID", EmitDefaultValue=false)]
        public Guid? EmployeeID { get; set; }

        /// <summary>
        /// Gets or Sets StatusCode
        /// </summary>
        [DataMember(Name="StatusCode", EmitDefaultValue=false)]
        public int? StatusCode { get; set; }

        /// <summary>
        /// Gets or Sets PurchaseOrder
        /// </summary>
        [DataMember(Name="PurchaseOrder", EmitDefaultValue=false)]
        public string PurchaseOrder { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="Status", EmitDefaultValue=false)]
        public string Status { get; set; }

        /// <summary>
        /// Gets or Sets CurrencyName
        /// </summary>
        [DataMember(Name="CurrencyName", EmitDefaultValue=false)]
        public string CurrencyName { get; set; }

        /// <summary>
        /// Gets or Sets CurrencyID
        /// </summary>
        [DataMember(Name="CurrencyID", EmitDefaultValue=false)]
        public Guid? CurrencyID { get; set; }

        /// <summary>
        /// Gets or Sets ExchangeRate
        /// </summary>
        [DataMember(Name="ExchangeRate", EmitDefaultValue=false)]
        public double? ExchangeRate { get; set; }

        /// <summary>
        /// Gets or Sets RFC
        /// </summary>
        [DataMember(Name="RFC", EmitDefaultValue=false)]
        public string RFC { get; set; }

        /// <summary>
        /// Gets or Sets ServiceSubtotal
        /// </summary>
        [DataMember(Name="ServiceSubtotal", EmitDefaultValue=false)]
        public double? ServiceSubtotal { get; set; }

        /// <summary>
        /// Gets or Sets ProductSubtotal
        /// </summary>
        [DataMember(Name="ProductSubtotal", EmitDefaultValue=false)]
        public double? ProductSubtotal { get; set; }

        /// <summary>
        /// Gets or Sets Discount
        /// </summary>
        [DataMember(Name="Discount", EmitDefaultValue=false)]
        public double? Discount { get; set; }

        /// <summary>
        /// Gets or Sets VATRate
        /// </summary>
        [DataMember(Name="VATRate", EmitDefaultValue=false)]
        public double? VATRate { get; set; }

        /// <summary>
        /// Gets or Sets VAT
        /// </summary>
        [DataMember(Name="VAT", EmitDefaultValue=false)]
        public double? VAT { get; set; }

        /// <summary>
        /// Gets or Sets DiscountType
        /// </summary>
        [DataMember(Name="DiscountType", EmitDefaultValue=false)]
        public int? DiscountType { get; set; }

        /// <summary>
        /// Gets or Sets IEPS
        /// </summary>
        [DataMember(Name="IEPS", EmitDefaultValue=false)]
        public double? IEPS { get; set; }

        /// <summary>
        /// Gets or Sets IEPSRATE
        /// </summary>
        [DataMember(Name="IEPSRATE", EmitDefaultValue=false)]
        public double? IEPSRATE { get; set; }

        /// <summary>
        /// Gets or Sets ISRRet
        /// </summary>
        [DataMember(Name="ISRRet", EmitDefaultValue=false)]
        public double? ISRRet { get; set; }

        /// <summary>
        /// Gets or Sets ISRRetRate
        /// </summary>
        [DataMember(Name="ISRRetRate", EmitDefaultValue=false)]
        public double? ISRRetRate { get; set; }

        /// <summary>
        /// Gets or Sets VatRet
        /// </summary>
        [DataMember(Name="VatRet", EmitDefaultValue=false)]
        public double? VatRet { get; set; }

        /// <summary>
        /// Gets or Sets VatRetRate
        /// </summary>
        [DataMember(Name="VatRetRate", EmitDefaultValue=false)]
        public double? VatRetRate { get; set; }

        /// <summary>
        /// Gets or Sets Total
        /// </summary>
        [DataMember(Name="Total", EmitDefaultValue=false)]
        public double? Total { get; set; }

        /// <summary>
        /// Gets or Sets Products
        /// </summary>
        [DataMember(Name="Products", EmitDefaultValue=false)]
        public List<OrderDetailsProduct> Products { get; set; }

        /// <summary>
        /// Gets or Sets Services
        /// </summary>
        [DataMember(Name="Services", EmitDefaultValue=false)]
        public List<OrderDetailsService> Services { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class OrderDetails {\n");
            sb.Append("  ID: ").Append(ID).Append("\n");
            sb.Append("  ClientID: ").Append(ClientID).Append("\n");
            sb.Append("  ClientName: ").Append(ClientName).Append("\n");
            sb.Append("  PriceListName: ").Append(PriceListName).Append("\n");
            sb.Append("  PriceListID: ").Append(PriceListID).Append("\n");
            sb.Append("  LocationName: ").Append(LocationName).Append("\n");
            sb.Append("  LocationID: ").Append(LocationID).Append("\n");
            sb.Append("  WarehouseID: ").Append(WarehouseID).Append("\n");
            sb.Append("  WarehouseName: ").Append(WarehouseName).Append("\n");
            sb.Append("  OrderDate: ").Append(OrderDate).Append("\n");
            sb.Append("  Comments: ").Append(Comments).Append("\n");
            sb.Append("  Number: ").Append(Number).Append("\n");
            sb.Append("  Address: ").Append(Address).Append("\n");
            sb.Append("  ClientContact: ").Append(ClientContact).Append("\n");
            sb.Append("  PhoneNumber: ").Append(PhoneNumber).Append("\n");
            sb.Append("  EmployeeName: ").Append(EmployeeName).Append("\n");
            sb.Append("  EmployeeID: ").Append(EmployeeID).Append("\n");
            sb.Append("  StatusCode: ").Append(StatusCode).Append("\n");
            sb.Append("  PurchaseOrder: ").Append(PurchaseOrder).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  CurrencyName: ").Append(CurrencyName).Append("\n");
            sb.Append("  CurrencyID: ").Append(CurrencyID).Append("\n");
            sb.Append("  ExchangeRate: ").Append(ExchangeRate).Append("\n");
            sb.Append("  RFC: ").Append(RFC).Append("\n");
            sb.Append("  ServiceSubtotal: ").Append(ServiceSubtotal).Append("\n");
            sb.Append("  ProductSubtotal: ").Append(ProductSubtotal).Append("\n");
            sb.Append("  Discount: ").Append(Discount).Append("\n");
            sb.Append("  VATRate: ").Append(VATRate).Append("\n");
            sb.Append("  VAT: ").Append(VAT).Append("\n");
            sb.Append("  DiscountType: ").Append(DiscountType).Append("\n");
            sb.Append("  IEPS: ").Append(IEPS).Append("\n");
            sb.Append("  IEPSRATE: ").Append(IEPSRATE).Append("\n");
            sb.Append("  ISRRet: ").Append(ISRRet).Append("\n");
            sb.Append("  ISRRetRate: ").Append(ISRRetRate).Append("\n");
            sb.Append("  VatRet: ").Append(VatRet).Append("\n");
            sb.Append("  VatRetRate: ").Append(VatRetRate).Append("\n");
            sb.Append("  Total: ").Append(Total).Append("\n");
            sb.Append("  Products: ").Append(Products).Append("\n");
            sb.Append("  Services: ").Append(Services).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as OrderDetails);
        }

        /// <summary>
        /// Returns true if OrderDetails instances are equal
        /// </summary>
        /// <param name="input">Instance of OrderDetails to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OrderDetails input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ID == input.ID ||
                    (this.ID != null &&
                    this.ID.Equals(input.ID))
                ) && 
                (
                    this.ClientID == input.ClientID ||
                    (this.ClientID != null &&
                    this.ClientID.Equals(input.ClientID))
                ) && 
                (
                    this.ClientName == input.ClientName ||
                    (this.ClientName != null &&
                    this.ClientName.Equals(input.ClientName))
                ) && 
                (
                    this.PriceListName == input.PriceListName ||
                    (this.PriceListName != null &&
                    this.PriceListName.Equals(input.PriceListName))
                ) && 
                (
                    this.PriceListID == input.PriceListID ||
                    (this.PriceListID != null &&
                    this.PriceListID.Equals(input.PriceListID))
                ) && 
                (
                    this.LocationName == input.LocationName ||
                    (this.LocationName != null &&
                    this.LocationName.Equals(input.LocationName))
                ) && 
                (
                    this.LocationID == input.LocationID ||
                    (this.LocationID != null &&
                    this.LocationID.Equals(input.LocationID))
                ) && 
                (
                    this.WarehouseID == input.WarehouseID ||
                    (this.WarehouseID != null &&
                    this.WarehouseID.Equals(input.WarehouseID))
                ) && 
                (
                    this.WarehouseName == input.WarehouseName ||
                    (this.WarehouseName != null &&
                    this.WarehouseName.Equals(input.WarehouseName))
                ) && 
                (
                    this.OrderDate == input.OrderDate ||
                    (this.OrderDate != null &&
                    this.OrderDate.Equals(input.OrderDate))
                ) && 
                (
                    this.Comments == input.Comments ||
                    (this.Comments != null &&
                    this.Comments.Equals(input.Comments))
                ) && 
                (
                    this.Number == input.Number ||
                    (this.Number != null &&
                    this.Number.Equals(input.Number))
                ) && 
                (
                    this.Address == input.Address ||
                    (this.Address != null &&
                    this.Address.Equals(input.Address))
                ) && 
                (
                    this.ClientContact == input.ClientContact ||
                    (this.ClientContact != null &&
                    this.ClientContact.Equals(input.ClientContact))
                ) && 
                (
                    this.PhoneNumber == input.PhoneNumber ||
                    (this.PhoneNumber != null &&
                    this.PhoneNumber.Equals(input.PhoneNumber))
                ) && 
                (
                    this.EmployeeName == input.EmployeeName ||
                    (this.EmployeeName != null &&
                    this.EmployeeName.Equals(input.EmployeeName))
                ) && 
                (
                    this.EmployeeID == input.EmployeeID ||
                    (this.EmployeeID != null &&
                    this.EmployeeID.Equals(input.EmployeeID))
                ) && 
                (
                    this.StatusCode == input.StatusCode ||
                    (this.StatusCode != null &&
                    this.StatusCode.Equals(input.StatusCode))
                ) && 
                (
                    this.PurchaseOrder == input.PurchaseOrder ||
                    (this.PurchaseOrder != null &&
                    this.PurchaseOrder.Equals(input.PurchaseOrder))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) && 
                (
                    this.CurrencyName == input.CurrencyName ||
                    (this.CurrencyName != null &&
                    this.CurrencyName.Equals(input.CurrencyName))
                ) && 
                (
                    this.CurrencyID == input.CurrencyID ||
                    (this.CurrencyID != null &&
                    this.CurrencyID.Equals(input.CurrencyID))
                ) && 
                (
                    this.ExchangeRate == input.ExchangeRate ||
                    (this.ExchangeRate != null &&
                    this.ExchangeRate.Equals(input.ExchangeRate))
                ) && 
                (
                    this.RFC == input.RFC ||
                    (this.RFC != null &&
                    this.RFC.Equals(input.RFC))
                ) && 
                (
                    this.ServiceSubtotal == input.ServiceSubtotal ||
                    (this.ServiceSubtotal != null &&
                    this.ServiceSubtotal.Equals(input.ServiceSubtotal))
                ) && 
                (
                    this.ProductSubtotal == input.ProductSubtotal ||
                    (this.ProductSubtotal != null &&
                    this.ProductSubtotal.Equals(input.ProductSubtotal))
                ) && 
                (
                    this.Discount == input.Discount ||
                    (this.Discount != null &&
                    this.Discount.Equals(input.Discount))
                ) && 
                (
                    this.VATRate == input.VATRate ||
                    (this.VATRate != null &&
                    this.VATRate.Equals(input.VATRate))
                ) && 
                (
                    this.VAT == input.VAT ||
                    (this.VAT != null &&
                    this.VAT.Equals(input.VAT))
                ) && 
                (
                    this.DiscountType == input.DiscountType ||
                    (this.DiscountType != null &&
                    this.DiscountType.Equals(input.DiscountType))
                ) && 
                (
                    this.IEPS == input.IEPS ||
                    (this.IEPS != null &&
                    this.IEPS.Equals(input.IEPS))
                ) && 
                (
                    this.IEPSRATE == input.IEPSRATE ||
                    (this.IEPSRATE != null &&
                    this.IEPSRATE.Equals(input.IEPSRATE))
                ) && 
                (
                    this.ISRRet == input.ISRRet ||
                    (this.ISRRet != null &&
                    this.ISRRet.Equals(input.ISRRet))
                ) && 
                (
                    this.ISRRetRate == input.ISRRetRate ||
                    (this.ISRRetRate != null &&
                    this.ISRRetRate.Equals(input.ISRRetRate))
                ) && 
                (
                    this.VatRet == input.VatRet ||
                    (this.VatRet != null &&
                    this.VatRet.Equals(input.VatRet))
                ) && 
                (
                    this.VatRetRate == input.VatRetRate ||
                    (this.VatRetRate != null &&
                    this.VatRetRate.Equals(input.VatRetRate))
                ) && 
                (
                    this.Total == input.Total ||
                    (this.Total != null &&
                    this.Total.Equals(input.Total))
                ) && 
                (
                    this.Products == input.Products ||
                    this.Products != null &&
                    this.Products.SequenceEqual(input.Products)
                ) && 
                (
                    this.Services == input.Services ||
                    this.Services != null &&
                    this.Services.SequenceEqual(input.Services)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ID != null)
                    hashCode = hashCode * 59 + this.ID.GetHashCode();
                if (this.ClientID != null)
                    hashCode = hashCode * 59 + this.ClientID.GetHashCode();
                if (this.ClientName != null)
                    hashCode = hashCode * 59 + this.ClientName.GetHashCode();
                if (this.PriceListName != null)
                    hashCode = hashCode * 59 + this.PriceListName.GetHashCode();
                if (this.PriceListID != null)
                    hashCode = hashCode * 59 + this.PriceListID.GetHashCode();
                if (this.LocationName != null)
                    hashCode = hashCode * 59 + this.LocationName.GetHashCode();
                if (this.LocationID != null)
                    hashCode = hashCode * 59 + this.LocationID.GetHashCode();
                if (this.WarehouseID != null)
                    hashCode = hashCode * 59 + this.WarehouseID.GetHashCode();
                if (this.WarehouseName != null)
                    hashCode = hashCode * 59 + this.WarehouseName.GetHashCode();
                if (this.OrderDate != null)
                    hashCode = hashCode * 59 + this.OrderDate.GetHashCode();
                if (this.Comments != null)
                    hashCode = hashCode * 59 + this.Comments.GetHashCode();
                if (this.Number != null)
                    hashCode = hashCode * 59 + this.Number.GetHashCode();
                if (this.Address != null)
                    hashCode = hashCode * 59 + this.Address.GetHashCode();
                if (this.ClientContact != null)
                    hashCode = hashCode * 59 + this.ClientContact.GetHashCode();
                if (this.PhoneNumber != null)
                    hashCode = hashCode * 59 + this.PhoneNumber.GetHashCode();
                if (this.EmployeeName != null)
                    hashCode = hashCode * 59 + this.EmployeeName.GetHashCode();
                if (this.EmployeeID != null)
                    hashCode = hashCode * 59 + this.EmployeeID.GetHashCode();
                if (this.StatusCode != null)
                    hashCode = hashCode * 59 + this.StatusCode.GetHashCode();
                if (this.PurchaseOrder != null)
                    hashCode = hashCode * 59 + this.PurchaseOrder.GetHashCode();
                if (this.Status != null)
                    hashCode = hashCode * 59 + this.Status.GetHashCode();
                if (this.CurrencyName != null)
                    hashCode = hashCode * 59 + this.CurrencyName.GetHashCode();
                if (this.CurrencyID != null)
                    hashCode = hashCode * 59 + this.CurrencyID.GetHashCode();
                if (this.ExchangeRate != null)
                    hashCode = hashCode * 59 + this.ExchangeRate.GetHashCode();
                if (this.RFC != null)
                    hashCode = hashCode * 59 + this.RFC.GetHashCode();
                if (this.ServiceSubtotal != null)
                    hashCode = hashCode * 59 + this.ServiceSubtotal.GetHashCode();
                if (this.ProductSubtotal != null)
                    hashCode = hashCode * 59 + this.ProductSubtotal.GetHashCode();
                if (this.Discount != null)
                    hashCode = hashCode * 59 + this.Discount.GetHashCode();
                if (this.VATRate != null)
                    hashCode = hashCode * 59 + this.VATRate.GetHashCode();
                if (this.VAT != null)
                    hashCode = hashCode * 59 + this.VAT.GetHashCode();
                if (this.DiscountType != null)
                    hashCode = hashCode * 59 + this.DiscountType.GetHashCode();
                if (this.IEPS != null)
                    hashCode = hashCode * 59 + this.IEPS.GetHashCode();
                if (this.IEPSRATE != null)
                    hashCode = hashCode * 59 + this.IEPSRATE.GetHashCode();
                if (this.ISRRet != null)
                    hashCode = hashCode * 59 + this.ISRRet.GetHashCode();
                if (this.ISRRetRate != null)
                    hashCode = hashCode * 59 + this.ISRRetRate.GetHashCode();
                if (this.VatRet != null)
                    hashCode = hashCode * 59 + this.VatRet.GetHashCode();
                if (this.VatRetRate != null)
                    hashCode = hashCode * 59 + this.VatRetRate.GetHashCode();
                if (this.Total != null)
                    hashCode = hashCode * 59 + this.Total.GetHashCode();
                if (this.Products != null)
                    hashCode = hashCode * 59 + this.Products.GetHashCode();
                if (this.Services != null)
                    hashCode = hashCode * 59 + this.Services.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
