/* 
 * Bind ERP API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing ProvidersApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ProvidersApiTests
    {
        private ProvidersApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ProvidersApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ProvidersApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ProvidersApi
            //Assert.IsInstanceOfType(typeof(ProvidersApi), instance, "instance is a ProvidersApi");
        }

        
        /// <summary>
        /// Test ProvidersAddProvider
        /// </summary>
        [Test]
        public void ProvidersAddProviderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //NewProvider newProvider = null;
            //var response = instance.ProvidersAddProvider(newProvider);
            //Assert.IsInstanceOf<Guid?> (response, "response is Guid?");
        }
        
        /// <summary>
        /// Test ProvidersDeleteByID
        /// </summary>
        [Test]
        public void ProvidersDeleteByIDTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? id = null;
            //instance.ProvidersDeleteByID(id);
            
        }
        
        /// <summary>
        /// Test ProvidersEditProvider
        /// </summary>
        [Test]
        public void ProvidersEditProviderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EditProvider provider = null;
            //instance.ProvidersEditProvider(provider);
            
        }
        
        /// <summary>
        /// Test ProvidersGetProviders
        /// </summary>
        [Test]
        public void ProvidersGetProvidersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filter = null;
            //string orderby = null;
            //int? top = null;
            //int? skip = null;
            //var response = instance.ProvidersGetProviders(filter, orderby, top, skip);
            //Assert.IsInstanceOf<ProviderListItemPage> (response, "response is ProviderListItemPage");
        }
        
    }

}
