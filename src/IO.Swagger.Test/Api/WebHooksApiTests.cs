/* 
 * Bind ERP API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing WebHooksApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class WebHooksApiTests
    {
        private WebHooksApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new WebHooksApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of WebHooksApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' WebHooksApi
            //Assert.IsInstanceOfType(typeof(WebHooksApi), instance, "instance is a WebHooksApi");
        }

        
        /// <summary>
        /// Test WebHooksAddWebHookSubscriptions
        /// </summary>
        [Test]
        public void WebHooksAddWebHookSubscriptionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //NewWebHookSubscription newWebHookSubscription = null;
            //var response = instance.WebHooksAddWebHookSubscriptions(newWebHookSubscription);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test WebHooksDeleteWebHookSubscriptionByID
        /// </summary>
        [Test]
        public void WebHooksDeleteWebHookSubscriptionByIDTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
<<<<<<< HEAD
            //Guid? subscriptionID = null;
            //instance.WebHooksDeleteWebHookSubscriptionByID(id, subscriptionID);
=======
            //instance.WebHooksDeleteWebHookSubscriptionByID(id);
>>>>>>> 00a0f02ad3caf59a4284f6cc77ac538a3fc20070
            
        }
        
        /// <summary>
        /// Test WebHooksEditWebHookSubscription
        /// </summary>
        [Test]
        public void WebHooksEditWebHookSubscriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EditWebHookSubscription webHookSubscription = null;
            //instance.WebHooksEditWebHookSubscription(webHookSubscription);
            
        }
        
        /// <summary>
        /// Test WebHooksGetWebHookSampleData
        /// </summary>
        [Test]
        public void WebHooksGetWebHookSampleDataTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string eventID = null;
            //var response = instance.WebHooksGetWebHookSampleData(eventID);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test WebHooksGetWebHookSubscriptions
        /// </summary>
        [Test]
        public void WebHooksGetWebHookSubscriptionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filter = null;
            //string orderby = null;
            //int? top = null;
            //int? skip = null;
            //var response = instance.WebHooksGetWebHookSubscriptions(filter, orderby, top, skip);
            //Assert.IsInstanceOf<WebHookSubscriptionPage> (response, "response is WebHookSubscriptionPage");
        }
        
        /// <summary>
        /// Test WebHooksGetWebHooks
        /// </summary>
        [Test]
        public void WebHooksGetWebHooksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filter = null;
            //string orderby = null;
            //int? top = null;
            //int? skip = null;
            //var response = instance.WebHooksGetWebHooks(filter, orderby, top, skip);
            //Assert.IsInstanceOf<WebHookPage> (response, "response is WebHookPage");
        }
        
    }

}
